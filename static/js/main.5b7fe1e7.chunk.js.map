{"version":3,"sources":["components/AddFavourite.js","FavActions.js","FavConstants.js","components/Movie.js","screans/HomeScreen.js","components/Navbar.js","screans/Favourites.js","store.js","FavReducers.js","screans/MovieDetailScreen.js","App.js","serviceWorker.js","index.js"],"names":["AddFavourite","movieId","favourite","console","log","dispatch","useDispatch","useEffect","getState","a","axios","get","data","type","payload","movie","name","Title","duration","Runtime","released","Released","genre","Genre","rating","imdbRating","favMovies","Cookie","set","JSON","stringify","addToFavourite","Movie","active","useState","setFavourite","className","to","imdbID","style","color","fontWeight","onClick","HomeScreen","searchtext","setSearchtext","url","setUrl","setData","setActive","setType","fetchMovies","placeholder","onChange","e","target","value","Navbar","navStyle","Favourites","props","fav","setFav","getJSON","handleFav","removeFromFav","length","map","item","initialState","favmovies","reducer","combineReducers","state","action","find","x","filter","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","MovieDetailScreen","math","setMovie","fetchItems","match","params","id","items","Country","Language","App","path","exact","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b7fe1e7.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { addToFavourite } from '../FavActions';\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\nfunction AddFavourite({movieId,favourite}) {\r\n\r\n    console.log('favourite movie',movieId)\r\n    const  dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if(movieId){\r\n            dispatch(addToFavourite(movieId,favourite))\r\n        }\r\n        return () => {\r\n            //\r\n        }\r\n    }, [])\r\n    return (\r\n        <div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddFavourite\r\n","import axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport { ADD_TO_FAVOURITE, REMOVE_FROM_FAVOURITE } from './FavConstants';\r\n\r\nconst addToFavourite=(movieId,favourite)=>async (dispatch,getState)=>{\r\n    const {data}=await axios.get(\"https://www.omdbapi.com/?apikey=b1b1c505&i=\"+movieId);\r\n    dispatch({\r\n        type:ADD_TO_FAVOURITE,payload:{\r\n            movie:movieId,\r\n            name:data.Title,\r\n            duration:data.Runtime,\r\n            released:data.Released,\r\n            genre:data.Genre,\r\n            rating:data.imdbRating,\r\n            favourite\r\n\r\n\r\n        }\r\n    });\r\n    const {favMovies}=getState();\r\n    Cookie.set('favMovies',JSON.stringify(favMovies));\r\n\r\n}\r\n\r\nconst removeFromFav=(movieId)=>(dispatch,getState)=>{\r\n    dispatch({type:REMOVE_FROM_FAVOURITE,payload:movieId})\r\n    const {favMovies}=getState();\r\n    Cookie.set('favMovies',JSON.stringify(favMovies));\r\n\r\n\r\n}\r\n\r\nexport {addToFavourite,removeFromFav}","export const ADD_TO_FAVOURITE='ADD_TO_FAVOURITE';\r\nexport const REMOVE_FROM_FAVOURITE='REMOVE_FROM_FAVOURITE';","import React,{useEffect, useState} from 'react'\r\nimport AddFavourite from './AddFavourite';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Movie({data,active,type}) {\r\n    const [favourite,setFavourite]=useState(false)\r\n    console.log(data)\r\n    const handleFavourite=()=>{\r\n\r\n        setFavourite(!favourite)\r\n       \r\n    }\r\n    const navStyle={\r\n        color:'yellow'\r\n        \r\n    }\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        setFavourite(false)\r\n        \r\n        return () => {\r\n            //\r\n        }\r\n    }, [data])\r\n    return (\r\n        <div className='center'>\r\n        {active?\r\n        (data.Title ? (\r\n            <div className='card'>\r\n        <div className='card-header'>\r\n        <Link to={`/movie/${data.imdbID}`} style={navStyle}>\r\n        <h3 style={{fontWeight:'bolder'}}>{data.Title}</h3>\r\n        </Link>\r\n\r\n        </div>\r\n        <div className='card-container'>\r\n        <h3>Duration:<span style={{color:'black'}}><i>{data.Runtime}</i></span></h3>\r\n        <h3>Genre:<span style={{color:'black'}}><i>{data.Genre}</i></span></h3>\r\n        <h3>Release data:<span style={{color:'black'}}><i>{data.Released}</i></span></h3>\r\n\r\n        <button onClick={handleFavourite}>{!favourite? 'Favourite':'Not favourite'}</button>\r\n        \r\n        \r\n\r\n        </div>\r\n        </div>\r\n\r\n        ):<h2>{type} not found</h2>)\r\n        :null\r\n        \r\n        }\r\n        {favourite && <AddFavourite movieId={data.imdbID} favourite={favourite} />}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\n\r\n\r\nfunction HomeScreen() {\r\n    const [searchtext,setSearchtext]=useState('')\r\n    const [url,setUrl]=useState(`https://www.omdbapi.com/?apikey=b1b1c505`)\r\n    const [data,setData]=useState('')\r\n    const [active,setActive]=useState(false)\r\n    const [type,setType]=useState('movie')\r\n \r\n\r\n    const fetchMovies= async ()=>{\r\n        const {data}=await axios.get(url+`&t=${searchtext}`)\r\n        setData(data)\r\n        \r\n    }\r\n    const handleSearch=(e)=>{\r\n        setSearchtext(e.target.value)\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        fetchMovies()\r\n        setUrl(`https://www.omdbapi.com/?apikey=b1b1c505`)\r\n        setActive(true)\r\n\r\n    }\r\n    const handleDrop=(e)=>{\r\n      \r\n        setUrl( url+`&type=${e.target.value}`)\r\n        setType(e.target.value)\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n        <div className='container'>\r\n            <div >\r\n            <ul className='filter'>\r\n                <li>\r\n                <input\r\n                    type='text'\r\n                    placeholder='enter key words'\r\n                    onChange={handleSearch}\r\n\r\n                />\r\n                </li>\r\n                <li>\r\n                <div className='dropdown-content' onChange={handleDrop}>   \r\n                    <select name=\"sortOrder\" >\r\n                          <option value=\"\">All</option>\r\n                          <option value=\"movie\">Movies</option>\r\n                          <option value=\"series\">Series</option>\r\n                          <option value=\"episode\">Episodes</option>\r\n                     </select>\r\n                  \r\n                </div>\r\n                </li>\r\n                <li>\r\n                <button onClick={handleSubmit}>Search</button>\r\n\r\n                </li>\r\n            </ul>\r\n                \r\n            </div>\r\n            </div>\r\n            <Movie data={data} active={active} type={type} />\r\n           \r\n\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nfunction Navbar() {\r\n    const navStyle={\r\n        color:'white'\r\n        \r\n    }\r\n    return (\r\n        <div>\r\n        <nav>\r\n        <Link to='/' style={navStyle}>\r\n        <h3 className='link-style'>Home</h3>\r\n        </Link>\r\n            \r\n            <ul className='ul-items'>\r\n            <Link to='/favourite' style={navStyle}>\r\n            <li className='link-style'>\r\n                    Favourites\r\n                </li>\r\n            </Link>\r\n               \r\n            </ul>\r\n        </nav>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Cookie from 'js-cookie';\r\nimport { removeFromFav } from '../FavActions';\r\n\r\nfunction Favourites(props) {\r\n    const [fav,setFav]=useState(true)\r\n    \r\n    const {favMovies}=Cookie.getJSON('favMovies')||[];\r\n\r\n    console.log('testdata',favMovies)\r\n    const dispatch = useDispatch()\r\n    const handleFav=(movieId)=>{\r\n        dispatch(removeFromFav(movieId));\r\n        setFav(!fav)\r\n\r\n    }\r\n \r\n    return (\r\n        <div className='container-fav'>\r\n            \r\n                {\r\n                    favMovies.length===0 ?\r\n                    <h3>No favourite movie added</h3>\r\n                    :\r\n                    favMovies.map(item=>(\r\n                        \r\n       \r\n            <div className='card'>\r\n        <div className='card-header'>\r\n        <h3>{item.name}</h3>\r\n        </div>\r\n        <div className='card-container'>\r\n        <h3>Duration:<span style={{color:'black'}}><i>{item.duration}</i></span></h3>\r\n        <h3>Genre:<span style={{color:'black'}}><i>{item.genre}</i></span></h3>\r\n        <h3>Release data:<span style={{color:'black'}}><i>{item.released}</i></span></h3>\r\n        <button onClick={()=>handleFav(item.movie)}>{fav?'Remove from favourite':'Removed from favourite'}</button>\r\n        </div> \r\n        </div>\r\n    ))\r\n}\r\n</div>\r\n)}\r\n\r\nexport default Favourites\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport Cookie from 'js-cookie';\r\nimport { favReducer } from './FavReducers';\r\n\r\nconst favMovies=Cookie.getJSON('favMovies')||[];\r\n\r\nconst initialState={\r\n    favmovies:{favMovies}\r\n};\r\n\r\nconst reducer=combineReducers({\r\n    favMovies:favReducer\r\n})\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;","import { ADD_TO_FAVOURITE, REMOVE_FROM_FAVOURITE } from './FavConstants'\r\n\r\nfunction favReducer(state={favMovies:[]},action){\r\n    switch (action.type){\r\n        case ADD_TO_FAVOURITE:\r\n            const item=action.payload;\r\n            const movie=state.favMovies.find(x=>x.movie===item.movie);\r\n            if(movie){\r\n                return{\r\n                    favMovies:\r\n                    state.favMovies.map(x=>x.movie===movie.movie ? item:x)\r\n                }\r\n            }\r\n            return {favMovies:[...state.favMovies,item]};\r\n\r\n        case REMOVE_FROM_FAVOURITE:\r\n            return {favMovies:state.favMovies.filter(x=>x.movie !== action.payload)};\r\n\r\n\r\n        default:\r\n            return state;\r\n        \r\n        \r\n\r\n    }\r\n\r\n}\r\nexport {favReducer}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieDetailScreen=(math)=> {\r\n    console.log('last',math)\r\n    const [movie,setMovie]=useState({})\r\n\r\n    useEffect(() => {\r\n        fetchItems()\r\n        return () => {\r\n            //\r\n        }\r\n    }, [])\r\n    const fetchItems=async ()=>{\r\n        const items=await axios.get(`https://www.omdbapi.com/?apikey=b1b1c505&i=`+math.match.params.id)\r\n        const {data}=items\r\n        setMovie(data)\r\n    }\r\n  \r\n\r\n\r\n    const {Title,Runtime,Released,Country,Genre,Language,imdbRating}=movie;\r\n    return (\r\n        <div className='container-detail'>\r\n        <div>\r\n        <h2>Movie Title: {Title}</h2>\r\n        <h3>Duration: {Runtime}</h3>\r\n        <h3>Release Date: {Released}</h3>\r\n        <h3>Origin Country: {Country}</h3>\r\n        <h3>Genre: {Genre}</h3>\r\n        <h3>Language: {Language}</h3>\r\n        <h3>IMDB Rating: {imdbRating}</h3>\r\n        </div>\r\n        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetailScreen\r\n","import React from 'react';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport './App.css';\nimport HomeScreen from './screans/HomeScreen';\nimport Navbar from './components/Navbar';\nimport Favourites from './screans/Favourites';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport MovieDetailScreen from './screans/MovieDetailScreen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n     \n      <BrowserRouter>\n      <Provider store={store}>\n      <Navbar/>\n      <Route path='/' exact component={HomeScreen}/>\n      <Route path='/favourite' component={Favourites}/>\n      <Route path='/movie/:id' component={MovieDetailScreen}/>\n      </Provider>\n\n      </BrowserRouter>\n       \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}